name: CMake

on:
  workflow_call:
    inputs:
      platform:
        description: 'Target Platform to build, usually "ubuntu-latest" or "windows-latest"'
        required: true
        default: 'ubuntu-latest'
        type: string
      buildType:
        description: 'Build config'
        required: true
        default: 'Release'
        type: string

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ inputs.platform }}

    steps:
    - name: Clone repo
      uses: actions/checkout@v3

    - name: Clone submodules
      run: git submodule update --init --recursive --jobs $(nproc)

    # Configure CMake projects
    - name: Configure Driver CMake
      run: cmake driver -B ${{github.workspace}}/driver_build -DCMAKE_BUILD_TYPE=${{inputs.buildType}}

    - name: Configure Poser Cmake
      run: cmake bindings/cpp/examples/uduTest -B ${{github.workspace}}/poser_build -DCMAKE_BUILD_TYPE=${{inputs.buildType}}

    # Builds targets
    - name: Build Driver
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/driver_build --config ${{inputs.buildType}} -j $(nproc)

    - name: Build Poser
      run: cmake --build ${{github.workspace}}/poser_build --config ${{inputs.buildType}} -j $(nproc)

    - name: Fix Boost Install
      uses: "finnp/create-file-action@master"
      env:
        FILE_NAME: ${{github.workspace}}/driver_build/boost/cmake_install.cmake
        FILE_DATA: ""

    # Install targets
    - name: Install Driver
      # Install the built driver into it's directory
      run: cmake --install ${{github.workspace}}/driver_build

    - name: Install Poser
      run: cmake --install ${{github.workspace}}/poser_build

    # Upload build artifacts
    - name: Upload Driver Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: hobovr-build-${{ inputs.platform }}
        path: |
          hobovr

    - name: Upload poser Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: test-poser-${{ inputs.platform }}
        # could have different extensions depending on the platform
        path: bindings/cpp/examples/uduTest/output/test_poser

